//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated from a template.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.Collections;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Collections.Specialized;
using System.ComponentModel.DataAnnotations;

namespace Dwp.Adep.Ucb.DataServices.Models
{
    public partial class IncidentInterestedParty : IAuditable
    {
        #region Primitive Properties
    
        public virtual System.Guid Code
        {
            get;
            set;
        }
    
        public virtual System.Guid IncidentCode
        {
            get { return _incidentCode; }
            set
            {
                if (_incidentCode != value)
                {
                    if (Incident != null && Incident.Code != value)
                    {
                        Incident = null;
                    }
                    _incidentCode = value;
                }
            }
        }
        private System.Guid _incidentCode;
    
        public virtual System.Guid InterestedPartyCode
        {
            get { return _interestedPartyCode; }
            set
            {
                if (_interestedPartyCode != value)
                {
                    if (InterestedParty != null && InterestedParty.Code != value)
                    {
                        InterestedParty = null;
                    }
                    _interestedPartyCode = value;
                }
            }
        }
        private System.Guid _interestedPartyCode;
    
        public virtual byte[] RowIdentifier
        {
            get;
            set;
        }

        #endregion
        #region Navigation Properties
    
        public virtual InterestedParty InterestedParty
        {
            get { return _interestedParty; }
            set
            {
                if (!ReferenceEquals(_interestedParty, value))
                {
                    var previousValue = _interestedParty;
                    _interestedParty = value;
                    FixupInterestedParty(previousValue);
                }
            }
        }
        private InterestedParty _interestedParty;
    
        public virtual Incident Incident
        {
            get { return _incident; }
            set
            {
                if (!ReferenceEquals(_incident, value))
                {
                    var previousValue = _incident;
                    _incident = value;
                    FixupIncident(previousValue);
                }
            }
        }
        private Incident _incident;

        #endregion
        #region Association Fixup
    
        private void FixupInterestedParty(InterestedParty previousValue)
        {
            if (previousValue != null && previousValue.IncidentInterestedParty.Contains(this))
            {
                previousValue.IncidentInterestedParty.Remove(this);
            }
    
            if (InterestedParty != null)
            {
                if (!InterestedParty.IncidentInterestedParty.Contains(this))
                {
                    InterestedParty.IncidentInterestedParty.Add(this);
                }
                if (InterestedPartyCode != InterestedParty.Code)
                {
                    InterestedPartyCode = InterestedParty.Code;
                }
            }
        }
    
        private void FixupIncident(Incident previousValue)
        {
            if (previousValue != null && previousValue.IncidentInterestedParty.Contains(this))
            {
                previousValue.IncidentInterestedParty.Remove(this);
            }
    
            if (Incident != null)
            {
                if (!Incident.IncidentInterestedParty.Contains(this))
                {
                    Incident.IncidentInterestedParty.Add(this);
                }
                if (IncidentCode != Incident.Code)
                {
                    IncidentCode = Incident.Code;
                }
            }
        }

        #endregion
    }
}
