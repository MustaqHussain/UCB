//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated from a template.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.Collections;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Collections.Specialized;
using System.ComponentModel.DataAnnotations;

namespace Dwp.Adep.Ucb.DataServices.Models
{
    public partial class ContingencyArrangement : IAuditable, IActiveAware 
    {
        #region Primitive Properties
    
        public virtual System.Guid Code
        {
            get;
            set;
        }
    
        public virtual string Description
        {
            get;
            set;
        }
    
        public virtual bool IsActive
        {
            get;
            set;
        }
    
        public virtual byte[] RowIdentifier
        {
            get;
            set;
        }

        #endregion
        #region Navigation Properties
    
        public virtual ICollection<CustomerContingencyArrangement> CustomerContingencyArrangement
        {
            get
            {
                if (_customerContingencyArrangement == null)
                {
                    var newCollection = new FixupCollection<CustomerContingencyArrangement>();
                    newCollection.CollectionChanged += FixupCustomerContingencyArrangement;
                    _customerContingencyArrangement = newCollection;
                }
                return _customerContingencyArrangement;
            }
            set
            {
                if (!ReferenceEquals(_customerContingencyArrangement, value))
                {
                    var previousValue = _customerContingencyArrangement as FixupCollection<CustomerContingencyArrangement>;
                    if (previousValue != null)
                    {
                        previousValue.CollectionChanged -= FixupCustomerContingencyArrangement;
                    }
                    _customerContingencyArrangement = value;
                    var newValue = value as FixupCollection<CustomerContingencyArrangement>;
                    if (newValue != null)
                    {
                        newValue.CollectionChanged += FixupCustomerContingencyArrangement;
                    }
                }
            }
        }
        private ICollection<CustomerContingencyArrangement> _customerContingencyArrangement;

        #endregion
        #region Association Fixup
    
        private void FixupCustomerContingencyArrangement(object sender, NotifyCollectionChangedEventArgs e)
        {
            if (e.NewItems != null)
            {
                foreach (CustomerContingencyArrangement item in e.NewItems)
                {
                    item.ContingencyArrangement = this;
                }
            }
    
            if (e.OldItems != null)
            {
                foreach (CustomerContingencyArrangement item in e.OldItems)
                {
                    if (ReferenceEquals(item.ContingencyArrangement, this))
                    {
                        item.ContingencyArrangement = null;
                    }
                }
            }
        }

        #endregion
    }
}
