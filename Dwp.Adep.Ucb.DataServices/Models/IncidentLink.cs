//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated from a template.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.Collections;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Collections.Specialized;
using System.ComponentModel.DataAnnotations;

namespace Dwp.Adep.Ucb.DataServices.Models
{
    public partial class IncidentLink : IAuditable
    {
        #region Primitive Properties
    
        public virtual System.Guid Code
        {
            get;
            set;
        }
    
        public virtual Nullable<System.Guid> IncidentCode
        {
            get { return _incidentCode; }
            set
            {
                try
                {
                    _settingFK = true;
                    if (_incidentCode != value)
                    {
                        if (Incident != null && Incident.Code != value)
                        {
                            Incident = null;
                        }
                        _incidentCode = value;
                    }
                }
                finally
                {
                    _settingFK = false;
                }
            }
        }
        private Nullable<System.Guid> _incidentCode;
    
        public virtual Nullable<System.Guid> LinkedIncidentCode
        {
            get { return _linkedIncidentCode; }
            set
            {
                try
                {
                    _settingFK = true;
                    if (_linkedIncidentCode != value)
                    {
                        if (Incident1 != null && Incident1.Code != value)
                        {
                            Incident1 = null;
                        }
                        _linkedIncidentCode = value;
                    }
                }
                finally
                {
                    _settingFK = false;
                }
            }
        }
        private Nullable<System.Guid> _linkedIncidentCode;
    
        public virtual string CustomerName
        {
            get;
            set;
        }
    
        public virtual Nullable<int> IncidentId
        {
            get;
            set;
        }
    
        public virtual byte[] RowIdentifier
        {
            get;
            set;
        }

        #endregion
        #region Navigation Properties
    
        public virtual Incident Incident
        {
            get { return _incident; }
            set
            {
                if (!ReferenceEquals(_incident, value))
                {
                    var previousValue = _incident;
                    _incident = value;
                    FixupIncident(previousValue);
                }
            }
        }
        private Incident _incident;
    
        public virtual Incident Incident1
        {
            get { return _incident1; }
            set
            {
                if (!ReferenceEquals(_incident1, value))
                {
                    var previousValue = _incident1;
                    _incident1 = value;
                    FixupIncident1(previousValue);
                }
            }
        }
        private Incident _incident1;

        #endregion
        #region Association Fixup
    
        private bool _settingFK = false;
    
        private void FixupIncident(Incident previousValue)
        {
            if (previousValue != null && previousValue.IncidentLink.Contains(this))
            {
                previousValue.IncidentLink.Remove(this);
            }
    
            if (Incident != null)
            {
                if (!Incident.IncidentLink.Contains(this))
                {
                    Incident.IncidentLink.Add(this);
                }
                if (IncidentCode != Incident.Code)
                {
                    IncidentCode = Incident.Code;
                }
            }
            else if (!_settingFK)
            {
                IncidentCode = null;
            }
        }
    
        private void FixupIncident1(Incident previousValue)
        {
            if (previousValue != null && previousValue.IncidentLink1.Contains(this))
            {
                previousValue.IncidentLink1.Remove(this);
            }
    
            if (Incident1 != null)
            {
                if (!Incident1.IncidentLink1.Contains(this))
                {
                    Incident1.IncidentLink1.Add(this);
                }
                if (LinkedIncidentCode != Incident1.Code)
                {
                    LinkedIncidentCode = Incident1.Code;
                }
            }
            else if (!_settingFK)
            {
                LinkedIncidentCode = null;
            }
        }

        #endregion
    }
}
