//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated from a template.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.Collections;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Collections.Specialized;
using System.ComponentModel.DataAnnotations;

namespace Dwp.Adep.Ucb.DataServices.Models
{
    public partial class AttachmentData : IAuditable
    {
        #region Primitive Properties
    
        public virtual System.Guid Code
        {
            get;
            set;
        }
    
        public virtual System.Guid AttachmentCode
        {
            get { return _attachmentCode; }
            set
            {
                if (_attachmentCode != value)
                {
                    if (Attachment != null && Attachment.Code != value)
                    {
                        Attachment = null;
                    }
                    _attachmentCode = value;
                }
            }
        }
        private System.Guid _attachmentCode;
    
        public virtual byte[] DocumentBitmap
        {
            get;
            set;
        }
    
        public virtual byte[] RowIdentifier
        {
            get;
            set;
        }

        #endregion
        #region Navigation Properties
    
        public virtual Attachment Attachment
        {
            get { return _attachment; }
            set
            {
                if (!ReferenceEquals(_attachment, value))
                {
                    var previousValue = _attachment;
                    _attachment = value;
                    FixupAttachment(previousValue);
                }
            }
        }
        private Attachment _attachment;

        #endregion
        #region Association Fixup
    
        private void FixupAttachment(Attachment previousValue)
        {
            if (previousValue != null && previousValue.AttachmentData.Contains(this))
            {
                previousValue.AttachmentData.Remove(this);
            }
    
            if (Attachment != null)
            {
                if (!Attachment.AttachmentData.Contains(this))
                {
                    Attachment.AttachmentData.Add(this);
                }
                if (AttachmentCode != Attachment.Code)
                {
                    AttachmentCode = Attachment.Code;
                }
            }
        }

        #endregion
    }
}
