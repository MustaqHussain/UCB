//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated from a template.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.Collections;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Collections.Specialized;
using System.Web;
using AutoMapper;
using UcbWeb.UcbService;
using UcbWeb.Models;

namespace UcbWeb.Helpers
{
    // Manages items which need to be placed in Web cache
    public partial class CacheManager 
    {
    
    	private const string AbuseTypeListsKey = "ABUSETYPELISTS";
    
    	public AbuseTypeLookupListsCacheObject AbuseTypeListCache
    	{
    	    get { return Get<AbuseTypeLookupListsCacheObject>(AbuseTypeListsKey, GetAbuseTypeAndLookups); }
    	}
     
    	private AbuseTypeLookupListsCacheObject GetAbuseTypeAndLookups()
    	{
    	            
    		UcbServiceClient sc = new UcbServiceClient();
    		AbuseTypeVMDC returnObject = sc.GetAbuseType(HttpContext.Current.User.Identity.Name, HttpContext.Current.User.Identity.Name, "FrameworkAdmin", "", null);
    
    	    AbuseTypeLookupListsCacheObject CachedLists = new AbuseTypeLookupListsCacheObject();
    		
        	return CachedLists;           
    	}
    
    	private const string ADRoleLookupListsKey = "ADROLELOOKUPLISTS";
    
    	public ADRoleLookupLookupListsCacheObject ADRoleLookupListCache
    	{
    	    get { return Get<ADRoleLookupLookupListsCacheObject>(ADRoleLookupListsKey, GetADRoleLookupAndLookups); }
    	}
     
    	private ADRoleLookupLookupListsCacheObject GetADRoleLookupAndLookups()
    	{
    	            
    		UcbServiceClient sc = new UcbServiceClient();
    		ADRoleLookupVMDC returnObject = sc.GetADRoleLookup(HttpContext.Current.User.Identity.Name, HttpContext.Current.User.Identity.Name, "FrameworkAdmin", "", null);
    
    	    ADRoleLookupLookupListsCacheObject CachedLists = new ADRoleLookupLookupListsCacheObject();
    		
    		CachedLists.RoleList = Mapper.Map<IEnumerable<RoleDC>, List<RoleModel>>(returnObject.RoleList);
        	return CachedLists;           
    	}
    
    	private const string ApplicationListsKey = "APPLICATIONLISTS";
    
    	public ApplicationLookupListsCacheObject ApplicationListCache
    	{
    	    get { return Get<ApplicationLookupListsCacheObject>(ApplicationListsKey, GetApplicationAndLookups); }
    	}
     
    	private ApplicationLookupListsCacheObject GetApplicationAndLookups()
    	{
    	            
    		UcbServiceClient sc = new UcbServiceClient();
    		ApplicationVMDC returnObject = sc.GetApplication(HttpContext.Current.User.Identity.Name, HttpContext.Current.User.Identity.Name, "FrameworkAdmin", "", null);
    
    	    ApplicationLookupListsCacheObject CachedLists = new ApplicationLookupListsCacheObject();
    		
        	return CachedLists;           
    	}
    
    	private const string ApplicationAttributeListsKey = "APPLICATIONATTRIBUTELISTS";
    
    	public ApplicationAttributeLookupListsCacheObject ApplicationAttributeListCache
    	{
    	    get { return Get<ApplicationAttributeLookupListsCacheObject>(ApplicationAttributeListsKey, GetApplicationAttributeAndLookups); }
    	}
     
    	private ApplicationAttributeLookupListsCacheObject GetApplicationAttributeAndLookups()
    	{
    	            
    		UcbServiceClient sc = new UcbServiceClient();
    		ApplicationAttributeVMDC returnObject = sc.GetApplicationAttribute(HttpContext.Current.User.Identity.Name, HttpContext.Current.User.Identity.Name, "FrameworkAdmin", "", null);
    
    	    ApplicationAttributeLookupListsCacheObject CachedLists = new ApplicationAttributeLookupListsCacheObject();
    		
    		CachedLists.ApplicationList = Mapper.Map<IEnumerable<ApplicationDC>, List<ApplicationModel>>(returnObject.ApplicationList);
        	return CachedLists;           
    	}
    
    	private const string ApplicationOrganisationTypeGroupListsKey = "APPLICATIONORGANISATIONTYPEGROUPLISTS";
    
    	public ApplicationOrganisationTypeGroupLookupListsCacheObject ApplicationOrganisationTypeGroupListCache
    	{
    	    get { return Get<ApplicationOrganisationTypeGroupLookupListsCacheObject>(ApplicationOrganisationTypeGroupListsKey, GetApplicationOrganisationTypeGroupAndLookups); }
    	}
     
    	private ApplicationOrganisationTypeGroupLookupListsCacheObject GetApplicationOrganisationTypeGroupAndLookups()
    	{
    	            
    		UcbServiceClient sc = new UcbServiceClient();
    		ApplicationOrganisationTypeGroupVMDC returnObject = sc.GetApplicationOrganisationTypeGroup(HttpContext.Current.User.Identity.Name, HttpContext.Current.User.Identity.Name, "FrameworkAdmin", "", null);
    
    	    ApplicationOrganisationTypeGroupLookupListsCacheObject CachedLists = new ApplicationOrganisationTypeGroupLookupListsCacheObject();
    		
    		CachedLists.ApplicationList = Mapper.Map<IEnumerable<ApplicationDC>, List<ApplicationModel>>(returnObject.ApplicationList);
    		CachedLists.OrganisationTypeGroupList = Mapper.Map<IEnumerable<OrganisationTypeGroupDC>, List<OrganisationTypeGroupModel>>(returnObject.OrganisationTypeGroupList);
    		CachedLists.RootOrganisationForApplicationList = Mapper.Map<IEnumerable<OrganisationDC>, List<OrganisationModel>>(returnObject.RootOrganisationForApplicationList);
        	return CachedLists;           
    	}
    
    	private const string AttachmentListsKey = "ATTACHMENTLISTS";
    
    	public AttachmentLookupListsCacheObject AttachmentListCache
    	{
    	    get { return Get<AttachmentLookupListsCacheObject>(AttachmentListsKey, GetAttachmentAndLookups); }
    	}
     
    	private AttachmentLookupListsCacheObject GetAttachmentAndLookups()
    	{
    	            
    		UcbServiceClient sc = new UcbServiceClient();
    		AttachmentVMDC returnObject = sc.GetAttachment(HttpContext.Current.User.Identity.Name, HttpContext.Current.User.Identity.Name, "FrameworkAdmin", "", null);
    
    	    AttachmentLookupListsCacheObject CachedLists = new AttachmentLookupListsCacheObject();
    		
    		CachedLists.IncidentList = Mapper.Map<IEnumerable<IncidentDC>, List<IncidentModel>>(returnObject.IncidentList);
        	return CachedLists;           
    	}
    
    	private const string AttachmentDataListsKey = "ATTACHMENTDATALISTS";
    
    	public AttachmentDataLookupListsCacheObject AttachmentDataListCache
    	{
    	    get { return Get<AttachmentDataLookupListsCacheObject>(AttachmentDataListsKey, GetAttachmentDataAndLookups); }
    	}
     
    	private AttachmentDataLookupListsCacheObject GetAttachmentDataAndLookups()
    	{
    	            
    		UcbServiceClient sc = new UcbServiceClient();
    		AttachmentDataVMDC returnObject = sc.GetAttachmentData(HttpContext.Current.User.Identity.Name, HttpContext.Current.User.Identity.Name, "FrameworkAdmin", "", null);
    
    	    AttachmentDataLookupListsCacheObject CachedLists = new AttachmentDataLookupListsCacheObject();
    		
    		CachedLists.AttachmentList = Mapper.Map<IEnumerable<AttachmentDC>, List<AttachmentModel>>(returnObject.AttachmentList);
        	return CachedLists;           
    	}
    
    	private const string ContentListsKey = "CONTENTLISTS";
    
    	public ContentLookupListsCacheObject ContentListCache
    	{
    	    get { return Get<ContentLookupListsCacheObject>(ContentListsKey, GetContentAndLookups); }
    	}
     
    	private ContentLookupListsCacheObject GetContentAndLookups()
    	{
    	            
    		UcbServiceClient sc = new UcbServiceClient();
    		ContentVMDC returnObject = sc.GetContent(HttpContext.Current.User.Identity.Name, HttpContext.Current.User.Identity.Name, "FrameworkAdmin", "", null);
    
    	    ContentLookupListsCacheObject CachedLists = new ContentLookupListsCacheObject();
    		
        	return CachedLists;           
    	}
    
    	private const string ContingencyArrangementListsKey = "CONTINGENCYARRANGEMENTLISTS";
    
    	public ContingencyArrangementLookupListsCacheObject ContingencyArrangementListCache
    	{
    	    get { return Get<ContingencyArrangementLookupListsCacheObject>(ContingencyArrangementListsKey, GetContingencyArrangementAndLookups); }
    	}
     
    	private ContingencyArrangementLookupListsCacheObject GetContingencyArrangementAndLookups()
    	{
    	            
    		UcbServiceClient sc = new UcbServiceClient();
    		ContingencyArrangementVMDC returnObject = sc.GetContingencyArrangement(HttpContext.Current.User.Identity.Name, HttpContext.Current.User.Identity.Name, "FrameworkAdmin", "", null);
    
    	    ContingencyArrangementLookupListsCacheObject CachedLists = new ContingencyArrangementLookupListsCacheObject();
    		
        	return CachedLists;           
    	}
    
    	private const string ControlMeasureListsKey = "CONTROLMEASURELISTS";
    
    	public ControlMeasureLookupListsCacheObject ControlMeasureListCache
    	{
    	    get { return Get<ControlMeasureLookupListsCacheObject>(ControlMeasureListsKey, GetControlMeasureAndLookups); }
    	}
     
    	private ControlMeasureLookupListsCacheObject GetControlMeasureAndLookups()
    	{
    	            
    		UcbServiceClient sc = new UcbServiceClient();
    		ControlMeasureVMDC returnObject = sc.GetControlMeasure(HttpContext.Current.User.Identity.Name, HttpContext.Current.User.Identity.Name, "FrameworkAdmin", "", null);
    
    	    ControlMeasureLookupListsCacheObject CachedLists = new ControlMeasureLookupListsCacheObject();
    		
        	return CachedLists;           
    	}
    
    	private const string CustomerListsKey = "CUSTOMERLISTS";
    
    	public CustomerLookupListsCacheObject CustomerListCache
    	{
    	    get { return Get<CustomerLookupListsCacheObject>(CustomerListsKey, GetCustomerAndLookups); }
    	}
     
    	private CustomerLookupListsCacheObject GetCustomerAndLookups()
    	{
    	            
    		UcbServiceClient sc = new UcbServiceClient();
    		CustomerVMDC returnObject = sc.GetCustomer(HttpContext.Current.User.Identity.Name, HttpContext.Current.User.Identity.Name, "FrameworkAdmin", "", null);
    
    	    CustomerLookupListsCacheObject CachedLists = new CustomerLookupListsCacheObject();
    		
    		CachedLists.RelationshipToCustomerList = Mapper.Map<IEnumerable<RelationshipToCustomerDC>, List<RelationshipToCustomerModel>>(returnObject.RelationshipToCustomerList);
        	return CachedLists;           
    	}
    
    	private const string CustomerContingencyArrangementListsKey = "CUSTOMERCONTINGENCYARRANGEMENTLISTS";
    
    	public CustomerContingencyArrangementLookupListsCacheObject CustomerContingencyArrangementListCache
    	{
    	    get { return Get<CustomerContingencyArrangementLookupListsCacheObject>(CustomerContingencyArrangementListsKey, GetCustomerContingencyArrangementAndLookups); }
    	}
     
    	private CustomerContingencyArrangementLookupListsCacheObject GetCustomerContingencyArrangementAndLookups()
    	{
    	            
    		UcbServiceClient sc = new UcbServiceClient();
    		CustomerContingencyArrangementVMDC returnObject = sc.GetCustomerContingencyArrangement(HttpContext.Current.User.Identity.Name, HttpContext.Current.User.Identity.Name, "FrameworkAdmin", "", null);
    
    	    CustomerContingencyArrangementLookupListsCacheObject CachedLists = new CustomerContingencyArrangementLookupListsCacheObject();
    		
    		CachedLists.CustomerList = Mapper.Map<IEnumerable<CustomerDC>, List<CustomerModel>>(returnObject.CustomerList);
    		CachedLists.ContingencyArrangementList = Mapper.Map<IEnumerable<ContingencyArrangementDC>, List<ContingencyArrangementModel>>(returnObject.ContingencyArrangementList);
        	return CachedLists;           
    	}
    
    	private const string CustomerControlMeasureListsKey = "CUSTOMERCONTROLMEASURELISTS";
    
    	public CustomerControlMeasureLookupListsCacheObject CustomerControlMeasureListCache
    	{
    	    get { return Get<CustomerControlMeasureLookupListsCacheObject>(CustomerControlMeasureListsKey, GetCustomerControlMeasureAndLookups); }
    	}
     
    	private CustomerControlMeasureLookupListsCacheObject GetCustomerControlMeasureAndLookups()
    	{
    	            
    		UcbServiceClient sc = new UcbServiceClient();
    		CustomerControlMeasureVMDC returnObject = sc.GetCustomerControlMeasure(HttpContext.Current.User.Identity.Name, HttpContext.Current.User.Identity.Name, "FrameworkAdmin", "", null);
    
    	    CustomerControlMeasureLookupListsCacheObject CachedLists = new CustomerControlMeasureLookupListsCacheObject();
    		
    		CachedLists.CustomerList = Mapper.Map<IEnumerable<CustomerDC>, List<CustomerModel>>(returnObject.CustomerList);
    		CachedLists.ControlMeasureList = Mapper.Map<IEnumerable<ControlMeasureDC>, List<ControlMeasureModel>>(returnObject.ControlMeasureList);
        	return CachedLists;           
    	}
    
    	private const string EventLeadingToIncidentListsKey = "EVENTLEADINGTOINCIDENTLISTS";
    
    	public EventLeadingToIncidentLookupListsCacheObject EventLeadingToIncidentListCache
    	{
    	    get { return Get<EventLeadingToIncidentLookupListsCacheObject>(EventLeadingToIncidentListsKey, GetEventLeadingToIncidentAndLookups); }
    	}
     
    	private EventLeadingToIncidentLookupListsCacheObject GetEventLeadingToIncidentAndLookups()
    	{
    	            
    		UcbServiceClient sc = new UcbServiceClient();
    		EventLeadingToIncidentVMDC returnObject = sc.GetEventLeadingToIncident(HttpContext.Current.User.Identity.Name, HttpContext.Current.User.Identity.Name, "FrameworkAdmin", "", null);
    
    	    EventLeadingToIncidentLookupListsCacheObject CachedLists = new EventLeadingToIncidentLookupListsCacheObject();
    		
        	return CachedLists;           
    	}
    
    	private const string GradeListsKey = "GRADELISTS";
    
    	public GradeLookupListsCacheObject GradeListCache
    	{
    	    get { return Get<GradeLookupListsCacheObject>(GradeListsKey, GetGradeAndLookups); }
    	}
     
    	private GradeLookupListsCacheObject GetGradeAndLookups()
    	{
    	            
    		UcbServiceClient sc = new UcbServiceClient();
    		GradeVMDC returnObject = sc.GetGrade(HttpContext.Current.User.Identity.Name, HttpContext.Current.User.Identity.Name, "FrameworkAdmin", "", null);
    
    	    GradeLookupListsCacheObject CachedLists = new GradeLookupListsCacheObject();
    		
        	return CachedLists;           
    	}
    
    	private const string IncidentCategoryListsKey = "INCIDENTCATEGORYLISTS";
    
    	public IncidentCategoryLookupListsCacheObject IncidentCategoryListCache
    	{
    	    get { return Get<IncidentCategoryLookupListsCacheObject>(IncidentCategoryListsKey, GetIncidentCategoryAndLookups); }
    	}
     
    	private IncidentCategoryLookupListsCacheObject GetIncidentCategoryAndLookups()
    	{
    	            
    		UcbServiceClient sc = new UcbServiceClient();
    		IncidentCategoryVMDC returnObject = sc.GetIncidentCategory(HttpContext.Current.User.Identity.Name, HttpContext.Current.User.Identity.Name, "FrameworkAdmin", "", null);
    
    	    IncidentCategoryLookupListsCacheObject CachedLists = new IncidentCategoryLookupListsCacheObject();
    		
        	return CachedLists;           
    	}
    
    	private const string IncidentDetailListsKey = "INCIDENTDETAILLISTS";
    
    	public IncidentDetailLookupListsCacheObject IncidentDetailListCache
    	{
    	    get { return Get<IncidentDetailLookupListsCacheObject>(IncidentDetailListsKey, GetIncidentDetailAndLookups); }
    	}
     
    	private IncidentDetailLookupListsCacheObject GetIncidentDetailAndLookups()
    	{
    	            
    		UcbServiceClient sc = new UcbServiceClient();
    		IncidentDetailVMDC returnObject = sc.GetIncidentDetail(HttpContext.Current.User.Identity.Name, HttpContext.Current.User.Identity.Name, "FrameworkAdmin", "", null);
    
    	    IncidentDetailLookupListsCacheObject CachedLists = new IncidentDetailLookupListsCacheObject();
    		
        	return CachedLists;           
    	}
    
    	private const string IncidentInterestedPartyListsKey = "INCIDENTINTERESTEDPARTYLISTS";
    
    	public IncidentInterestedPartyLookupListsCacheObject IncidentInterestedPartyListCache
    	{
    	    get { return Get<IncidentInterestedPartyLookupListsCacheObject>(IncidentInterestedPartyListsKey, GetIncidentInterestedPartyAndLookups); }
    	}
     
    	private IncidentInterestedPartyLookupListsCacheObject GetIncidentInterestedPartyAndLookups()
    	{
    	            
    		UcbServiceClient sc = new UcbServiceClient();
    		IncidentInterestedPartyVMDC returnObject = sc.GetIncidentInterestedParty(HttpContext.Current.User.Identity.Name, HttpContext.Current.User.Identity.Name, "FrameworkAdmin", "", null);
    
    	    IncidentInterestedPartyLookupListsCacheObject CachedLists = new IncidentInterestedPartyLookupListsCacheObject();
    		
    		CachedLists.IncidentList = Mapper.Map<IEnumerable<IncidentDC>, List<IncidentModel>>(returnObject.IncidentList);
    		CachedLists.InterestedPartyList = Mapper.Map<IEnumerable<InterestedPartyDC>, List<InterestedPartyModel>>(returnObject.InterestedPartyList);
        	return CachedLists;           
    	}
    
    	private const string IncidentLinkListsKey = "INCIDENTLINKLISTS";
    
    	public IncidentLinkLookupListsCacheObject IncidentLinkListCache
    	{
    	    get { return Get<IncidentLinkLookupListsCacheObject>(IncidentLinkListsKey, GetIncidentLinkAndLookups); }
    	}
     
    	private IncidentLinkLookupListsCacheObject GetIncidentLinkAndLookups()
    	{
    	            
    		UcbServiceClient sc = new UcbServiceClient();
    		IncidentLinkVMDC returnObject = sc.GetIncidentLink(HttpContext.Current.User.Identity.Name, HttpContext.Current.User.Identity.Name, "FrameworkAdmin", "", null);
    
    	    IncidentLinkLookupListsCacheObject CachedLists = new IncidentLinkLookupListsCacheObject();
    		
    		CachedLists.IncidentList = Mapper.Map<IEnumerable<IncidentDC>, List<IncidentModel>>(returnObject.IncidentList);
    		CachedLists.LinkedIncidentList = Mapper.Map<IEnumerable<IncidentDC>, List<IncidentModel>>(returnObject.LinkedIncidentList);
        	return CachedLists;           
    	}
    
    	private const string IncidentLocationListsKey = "INCIDENTLOCATIONLISTS";
    
    	public IncidentLocationLookupListsCacheObject IncidentLocationListCache
    	{
    	    get { return Get<IncidentLocationLookupListsCacheObject>(IncidentLocationListsKey, GetIncidentLocationAndLookups); }
    	}
     
    	private IncidentLocationLookupListsCacheObject GetIncidentLocationAndLookups()
    	{
    	            
    		UcbServiceClient sc = new UcbServiceClient();
    		IncidentLocationVMDC returnObject = sc.GetIncidentLocation(HttpContext.Current.User.Identity.Name, HttpContext.Current.User.Identity.Name, "FrameworkAdmin", "", null);
    
    	    IncidentLocationLookupListsCacheObject CachedLists = new IncidentLocationLookupListsCacheObject();
    		
        	return CachedLists;           
    	}
    
    	private const string IncidentSystemMarkedListsKey = "INCIDENTSYSTEMMARKEDLISTS";
    
    	public IncidentSystemMarkedLookupListsCacheObject IncidentSystemMarkedListCache
    	{
    	    get { return Get<IncidentSystemMarkedLookupListsCacheObject>(IncidentSystemMarkedListsKey, GetIncidentSystemMarkedAndLookups); }
    	}
     
    	private IncidentSystemMarkedLookupListsCacheObject GetIncidentSystemMarkedAndLookups()
    	{
    	            
    		UcbServiceClient sc = new UcbServiceClient();
    		IncidentSystemMarkedVMDC returnObject = sc.GetIncidentSystemMarked(HttpContext.Current.User.Identity.Name, HttpContext.Current.User.Identity.Name, "FrameworkAdmin", "", null);
    
    	    IncidentSystemMarkedLookupListsCacheObject CachedLists = new IncidentSystemMarkedLookupListsCacheObject();
    		
    		CachedLists.IncidentList = Mapper.Map<IEnumerable<IncidentDC>, List<IncidentModel>>(returnObject.IncidentList);
    		CachedLists.SystemMarkedList = Mapper.Map<IEnumerable<SystemMarkedDC>, List<SystemMarkedModel>>(returnObject.SystemMarkedList);
        	return CachedLists;           
    	}
    
    	private const string IncidentTypeListsKey = "INCIDENTTYPELISTS";
    
    	public IncidentTypeLookupListsCacheObject IncidentTypeListCache
    	{
    	    get { return Get<IncidentTypeLookupListsCacheObject>(IncidentTypeListsKey, GetIncidentTypeAndLookups); }
    	}
     
    	private IncidentTypeLookupListsCacheObject GetIncidentTypeAndLookups()
    	{
    	            
    		UcbServiceClient sc = new UcbServiceClient();
    		IncidentTypeVMDC returnObject = sc.GetIncidentType(HttpContext.Current.User.Identity.Name, HttpContext.Current.User.Identity.Name, "FrameworkAdmin", "", null);
    
    	    IncidentTypeLookupListsCacheObject CachedLists = new IncidentTypeLookupListsCacheObject();
    		
    		CachedLists.IncidentCategoryList = Mapper.Map<IEnumerable<IncidentCategoryDC>, List<IncidentCategoryModel>>(returnObject.IncidentCategoryList);
        	return CachedLists;           
    	}
    
    	private const string IncidentUpdateEventListsKey = "INCIDENTUPDATEEVENTLISTS";
    
    	public IncidentUpdateEventLookupListsCacheObject IncidentUpdateEventListCache
    	{
    	    get { return Get<IncidentUpdateEventLookupListsCacheObject>(IncidentUpdateEventListsKey, GetIncidentUpdateEventAndLookups); }
    	}
     
    	private IncidentUpdateEventLookupListsCacheObject GetIncidentUpdateEventAndLookups()
    	{
    	            
    		UcbServiceClient sc = new UcbServiceClient();
    		IncidentUpdateEventVMDC returnObject = sc.GetIncidentUpdateEvent(HttpContext.Current.User.Identity.Name, HttpContext.Current.User.Identity.Name, "FrameworkAdmin", "", null);
    
    	    IncidentUpdateEventLookupListsCacheObject CachedLists = new IncidentUpdateEventLookupListsCacheObject();
    		
    		CachedLists.IncidentList = Mapper.Map<IEnumerable<IncidentDC>, List<IncidentModel>>(returnObject.IncidentList);
        	return CachedLists;           
    	}
    
    	private const string InterestedPartyListsKey = "INTERESTEDPARTYLISTS";
    
    	public InterestedPartyLookupListsCacheObject InterestedPartyListCache
    	{
    	    get { return Get<InterestedPartyLookupListsCacheObject>(InterestedPartyListsKey, GetInterestedPartyAndLookups); }
    	}
     
    	private InterestedPartyLookupListsCacheObject GetInterestedPartyAndLookups()
    	{
    	            
    		UcbServiceClient sc = new UcbServiceClient();
    		InterestedPartyVMDC returnObject = sc.GetInterestedParty(HttpContext.Current.User.Identity.Name, HttpContext.Current.User.Identity.Name, "FrameworkAdmin", "", null);
    
    	    InterestedPartyLookupListsCacheObject CachedLists = new InterestedPartyLookupListsCacheObject();
    		
        	return CachedLists;           
    	}
    
    	private const string IntroductoryInformationListsKey = "INTRODUCTORYINFORMATIONLISTS";
    
    	public IntroductoryInformationLookupListsCacheObject IntroductoryInformationListCache
    	{
    	    get { return Get<IntroductoryInformationLookupListsCacheObject>(IntroductoryInformationListsKey, GetIntroductoryInformationAndLookups); }
    	}
     
    	private IntroductoryInformationLookupListsCacheObject GetIntroductoryInformationAndLookups()
    	{
    	            
    		UcbServiceClient sc = new UcbServiceClient();
    		IntroductoryInformationVMDC returnObject = sc.GetIntroductoryInformation(HttpContext.Current.User.Identity.Name, HttpContext.Current.User.Identity.Name, "FrameworkAdmin", "", null);
    
    	    IntroductoryInformationLookupListsCacheObject CachedLists = new IntroductoryInformationLookupListsCacheObject();
    		
        	return CachedLists;           
    	}
    
    	private const string JobRoleListsKey = "JOBROLELISTS";
    
    	public JobRoleLookupListsCacheObject JobRoleListCache
    	{
    	    get { return Get<JobRoleLookupListsCacheObject>(JobRoleListsKey, GetJobRoleAndLookups); }
    	}
     
    	private JobRoleLookupListsCacheObject GetJobRoleAndLookups()
    	{
    	            
    		UcbServiceClient sc = new UcbServiceClient();
    		JobRoleVMDC returnObject = sc.GetJobRole(HttpContext.Current.User.Identity.Name, HttpContext.Current.User.Identity.Name, "FrameworkAdmin", "", null);
    
    	    JobRoleLookupListsCacheObject CachedLists = new JobRoleLookupListsCacheObject();
    		
        	return CachedLists;           
    	}
    
    	private const string LinkedCustomerListsKey = "LINKEDCUSTOMERLISTS";
    
    	public LinkedCustomerLookupListsCacheObject LinkedCustomerListCache
    	{
    	    get { return Get<LinkedCustomerLookupListsCacheObject>(LinkedCustomerListsKey, GetLinkedCustomerAndLookups); }
    	}
     
    	private LinkedCustomerLookupListsCacheObject GetLinkedCustomerAndLookups()
    	{
    	            
    		UcbServiceClient sc = new UcbServiceClient();
    		LinkedCustomerVMDC returnObject = sc.GetLinkedCustomer(HttpContext.Current.User.Identity.Name, HttpContext.Current.User.Identity.Name, "FrameworkAdmin", "", null);
    
    	    LinkedCustomerLookupListsCacheObject CachedLists = new LinkedCustomerLookupListsCacheObject();
    		
    		CachedLists.Customer1List = Mapper.Map<IEnumerable<CustomerDC>, List<CustomerModel>>(returnObject.Customer1List);
    		CachedLists.Customer2List = Mapper.Map<IEnumerable<CustomerDC>, List<CustomerModel>>(returnObject.Customer2List);
        	return CachedLists;           
    	}
    
    	private const string NarrativeListsKey = "NARRATIVELISTS";
    
    	public NarrativeLookupListsCacheObject NarrativeListCache
    	{
    	    get { return Get<NarrativeLookupListsCacheObject>(NarrativeListsKey, GetNarrativeAndLookups); }
    	}
     
    	private NarrativeLookupListsCacheObject GetNarrativeAndLookups()
    	{
    	            
    		UcbServiceClient sc = new UcbServiceClient();
    		NarrativeVMDC returnObject = sc.GetNarrative(HttpContext.Current.User.Identity.Name, HttpContext.Current.User.Identity.Name, "FrameworkAdmin", "", null);
    
    	    NarrativeLookupListsCacheObject CachedLists = new NarrativeLookupListsCacheObject();
    		
        	return CachedLists;           
    	}
    
    	private const string OrganisationListsKey = "ORGANISATIONLISTS";
    
    	public OrganisationLookupListsCacheObject OrganisationListCache
    	{
    	    get { return Get<OrganisationLookupListsCacheObject>(OrganisationListsKey, GetOrganisationAndLookups); }
    	}
     
    	private OrganisationLookupListsCacheObject GetOrganisationAndLookups()
    	{
    	            
    		UcbServiceClient sc = new UcbServiceClient();
    		OrganisationVMDC returnObject = sc.GetOrganisation(HttpContext.Current.User.Identity.Name, HttpContext.Current.User.Identity.Name, "FrameworkAdmin", "", null);
    
    	    OrganisationLookupListsCacheObject CachedLists = new OrganisationLookupListsCacheObject();
    		
    		CachedLists.OrganisationTypeList = Mapper.Map<IEnumerable<OrganisationTypeDC>, List<OrganisationTypeModel>>(returnObject.OrganisationTypeList);
        	return CachedLists;           
    	}
    
    	private const string OrganisationHierarchyListsKey = "ORGANISATIONHIERARCHYLISTS";
    
    	public OrganisationHierarchyLookupListsCacheObject OrganisationHierarchyListCache
    	{
    	    get { return Get<OrganisationHierarchyLookupListsCacheObject>(OrganisationHierarchyListsKey, GetOrganisationHierarchyAndLookups); }
    	}
     
    	private OrganisationHierarchyLookupListsCacheObject GetOrganisationHierarchyAndLookups()
    	{
    	            
    		UcbServiceClient sc = new UcbServiceClient();
    		OrganisationHierarchyVMDC returnObject = sc.GetOrganisationHierarchy(HttpContext.Current.User.Identity.Name, HttpContext.Current.User.Identity.Name, "FrameworkAdmin", "", null);
    
    	    OrganisationHierarchyLookupListsCacheObject CachedLists = new OrganisationHierarchyLookupListsCacheObject();
    		
    		CachedLists.AncestorOrganisationList = Mapper.Map<IEnumerable<OrganisationDC>, List<OrganisationModel>>(returnObject.AncestorOrganisationList);
    		CachedLists.OrganisationList = Mapper.Map<IEnumerable<OrganisationDC>, List<OrganisationModel>>(returnObject.OrganisationList);
        	return CachedLists;           
    	}
    
    	private const string OrganisationTypeListsKey = "ORGANISATIONTYPELISTS";
    
    	public OrganisationTypeLookupListsCacheObject OrganisationTypeListCache
    	{
    	    get { return Get<OrganisationTypeLookupListsCacheObject>(OrganisationTypeListsKey, GetOrganisationTypeAndLookups); }
    	}
     
    	private OrganisationTypeLookupListsCacheObject GetOrganisationTypeAndLookups()
    	{
    	            
    		UcbServiceClient sc = new UcbServiceClient();
    		OrganisationTypeVMDC returnObject = sc.GetOrganisationType(HttpContext.Current.User.Identity.Name, HttpContext.Current.User.Identity.Name, "FrameworkAdmin", "", null);
    
    	    OrganisationTypeLookupListsCacheObject CachedLists = new OrganisationTypeLookupListsCacheObject();
    		
    		CachedLists.OrganisationTypeGroupList = Mapper.Map<IEnumerable<OrganisationTypeGroupDC>, List<OrganisationTypeGroupModel>>(returnObject.OrganisationTypeGroupList);
    		CachedLists.ParentOrganisationTypeList = Mapper.Map<IEnumerable<OrganisationTypeDC>, List<OrganisationTypeModel>>(returnObject.ParentOrganisationTypeList);
        	return CachedLists;           
    	}
    
    	private const string OrganisationTypeGroupListsKey = "ORGANISATIONTYPEGROUPLISTS";
    
    	public OrganisationTypeGroupLookupListsCacheObject OrganisationTypeGroupListCache
    	{
    	    get { return Get<OrganisationTypeGroupLookupListsCacheObject>(OrganisationTypeGroupListsKey, GetOrganisationTypeGroupAndLookups); }
    	}
     
    	private OrganisationTypeGroupLookupListsCacheObject GetOrganisationTypeGroupAndLookups()
    	{
    	            
    		UcbServiceClient sc = new UcbServiceClient();
    		OrganisationTypeGroupVMDC returnObject = sc.GetOrganisationTypeGroup(HttpContext.Current.User.Identity.Name, HttpContext.Current.User.Identity.Name, "FrameworkAdmin", "", null);
    
    	    OrganisationTypeGroupLookupListsCacheObject CachedLists = new OrganisationTypeGroupLookupListsCacheObject();
    		
        	return CachedLists;           
    	}
    
    	private const string ReferrerListsKey = "REFERRERLISTS";
    
    	public ReferrerLookupListsCacheObject ReferrerListCache
    	{
    	    get { return Get<ReferrerLookupListsCacheObject>(ReferrerListsKey, GetReferrerAndLookups); }
    	}
     
    	private ReferrerLookupListsCacheObject GetReferrerAndLookups()
    	{
    	            
    		UcbServiceClient sc = new UcbServiceClient();
    		ReferrerVMDC returnObject = sc.GetReferrer(HttpContext.Current.User.Identity.Name, HttpContext.Current.User.Identity.Name, "FrameworkAdmin", "", null);
    
    	    ReferrerLookupListsCacheObject CachedLists = new ReferrerLookupListsCacheObject();
    		
        	return CachedLists;           
    	}
    
    	private const string RelationshipToCustomerListsKey = "RELATIONSHIPTOCUSTOMERLISTS";
    
    	public RelationshipToCustomerLookupListsCacheObject RelationshipToCustomerListCache
    	{
    	    get { return Get<RelationshipToCustomerLookupListsCacheObject>(RelationshipToCustomerListsKey, GetRelationshipToCustomerAndLookups); }
    	}
     
    	private RelationshipToCustomerLookupListsCacheObject GetRelationshipToCustomerAndLookups()
    	{
    	            
    		UcbServiceClient sc = new UcbServiceClient();
    		RelationshipToCustomerVMDC returnObject = sc.GetRelationshipToCustomer(HttpContext.Current.User.Identity.Name, HttpContext.Current.User.Identity.Name, "FrameworkAdmin", "", null);
    
    	    RelationshipToCustomerLookupListsCacheObject CachedLists = new RelationshipToCustomerLookupListsCacheObject();
    		
        	return CachedLists;           
    	}
    
    	private const string ReportCategoryListsKey = "REPORTCATEGORYLISTS";
    
    	public ReportCategoryLookupListsCacheObject ReportCategoryListCache
    	{
    	    get { return Get<ReportCategoryLookupListsCacheObject>(ReportCategoryListsKey, GetReportCategoryAndLookups); }
    	}
     
    	private ReportCategoryLookupListsCacheObject GetReportCategoryAndLookups()
    	{
    	            
    		UcbServiceClient sc = new UcbServiceClient();
    		ReportCategoryVMDC returnObject = sc.GetReportCategory(HttpContext.Current.User.Identity.Name, HttpContext.Current.User.Identity.Name, "FrameworkAdmin", "", null);
    
    	    ReportCategoryLookupListsCacheObject CachedLists = new ReportCategoryLookupListsCacheObject();
    		
        	return CachedLists;           
    	}
    
    	private const string RoleListsKey = "ROLELISTS";
    
    	public RoleLookupListsCacheObject RoleListCache
    	{
    	    get { return Get<RoleLookupListsCacheObject>(RoleListsKey, GetRoleAndLookups); }
    	}
     
    	private RoleLookupListsCacheObject GetRoleAndLookups()
    	{
    	            
    		UcbServiceClient sc = new UcbServiceClient();
    		RoleVMDC returnObject = sc.GetRole(HttpContext.Current.User.Identity.Name, HttpContext.Current.User.Identity.Name, "FrameworkAdmin", "", null);
    
    	    RoleLookupListsCacheObject CachedLists = new RoleLookupListsCacheObject();
    		
    		CachedLists.ApplicationList = Mapper.Map<IEnumerable<ApplicationDC>, List<ApplicationModel>>(returnObject.ApplicationList);
        	return CachedLists;           
    	}
    
    	private const string SiteStaffListsKey = "SITESTAFFLISTS";
    
    	public SiteStaffLookupListsCacheObject SiteStaffListCache
    	{
    	    get { return Get<SiteStaffLookupListsCacheObject>(SiteStaffListsKey, GetSiteStaffAndLookups); }
    	}
     
    	private SiteStaffLookupListsCacheObject GetSiteStaffAndLookups()
    	{
    	            
    		UcbServiceClient sc = new UcbServiceClient();
    		SiteStaffVMDC returnObject = sc.GetSiteStaff(HttpContext.Current.User.Identity.Name, HttpContext.Current.User.Identity.Name, "FrameworkAdmin", "", null);
    
    	    SiteStaffLookupListsCacheObject CachedLists = new SiteStaffLookupListsCacheObject();
    		
    		CachedLists.SiteList = Mapper.Map<IEnumerable<SiteDC>, List<SiteModel>>(returnObject.SiteList);
    		CachedLists.StaffList = Mapper.Map<IEnumerable<StaffDC>, List<StaffModel>>(returnObject.StaffList);
        	return CachedLists;           
    	}
    
    	private const string StaffListsKey = "STAFFLISTS";
    
    	public StaffLookupListsCacheObject StaffListCache
    	{
    	    get { return Get<StaffLookupListsCacheObject>(StaffListsKey, GetStaffAndLookups); }
    	}
     
    	private StaffLookupListsCacheObject GetStaffAndLookups()
    	{
    	            
    		UcbServiceClient sc = new UcbServiceClient();
    		StaffVMDC returnObject = sc.GetStaff(HttpContext.Current.User.Identity.Name, HttpContext.Current.User.Identity.Name, "FrameworkAdmin", "", null);
    
    	    StaffLookupListsCacheObject CachedLists = new StaffLookupListsCacheObject();
    		
    		CachedLists.GradeList = Mapper.Map<IEnumerable<GradeDC>, List<GradeModel>>(returnObject.GradeList);
        	return CachedLists;           
    	}
    
    	private const string StaffAttributesListsKey = "STAFFATTRIBUTESLISTS";
    
    	public StaffAttributesLookupListsCacheObject StaffAttributesListCache
    	{
    	    get { return Get<StaffAttributesLookupListsCacheObject>(StaffAttributesListsKey, GetStaffAttributesAndLookups); }
    	}
     
    	private StaffAttributesLookupListsCacheObject GetStaffAttributesAndLookups()
    	{
    	            
    		UcbServiceClient sc = new UcbServiceClient();
    		StaffAttributesVMDC returnObject = sc.GetStaffAttributes(HttpContext.Current.User.Identity.Name, HttpContext.Current.User.Identity.Name, "FrameworkAdmin", "", null);
    
    	    StaffAttributesLookupListsCacheObject CachedLists = new StaffAttributesLookupListsCacheObject();
    		
    		CachedLists.StaffList = Mapper.Map<IEnumerable<StaffDC>, List<StaffModel>>(returnObject.StaffList);
    		CachedLists.ApplicationList = Mapper.Map<IEnumerable<ApplicationDC>, List<ApplicationModel>>(returnObject.ApplicationList);
    		CachedLists.ApplicationAttributeList = Mapper.Map<IEnumerable<ApplicationAttributeDC>, List<ApplicationAttributeModel>>(returnObject.ApplicationAttributeList);
        	return CachedLists;           
    	}
    
    	private const string StaffOrganisationListsKey = "STAFFORGANISATIONLISTS";
    
    	public StaffOrganisationLookupListsCacheObject StaffOrganisationListCache
    	{
    	    get { return Get<StaffOrganisationLookupListsCacheObject>(StaffOrganisationListsKey, GetStaffOrganisationAndLookups); }
    	}
     
    	private StaffOrganisationLookupListsCacheObject GetStaffOrganisationAndLookups()
    	{
    	            
    		UcbServiceClient sc = new UcbServiceClient();
    		StaffOrganisationVMDC returnObject = sc.GetStaffOrganisation(HttpContext.Current.User.Identity.Name, HttpContext.Current.User.Identity.Name, "FrameworkAdmin", "", null);
    
    	    StaffOrganisationLookupListsCacheObject CachedLists = new StaffOrganisationLookupListsCacheObject();
    		
    		CachedLists.StaffList = Mapper.Map<IEnumerable<StaffDC>, List<StaffModel>>(returnObject.StaffList);
    		CachedLists.OrganisationList = Mapper.Map<IEnumerable<OrganisationDC>, List<OrganisationModel>>(returnObject.OrganisationList);
    		CachedLists.ApplicationList = Mapper.Map<IEnumerable<ApplicationDC>, List<ApplicationModel>>(returnObject.ApplicationList);
        	return CachedLists;           
    	}
    
    	private const string StandardReportListsKey = "STANDARDREPORTLISTS";
    
    	public StandardReportLookupListsCacheObject StandardReportListCache
    	{
    	    get { return Get<StandardReportLookupListsCacheObject>(StandardReportListsKey, GetStandardReportAndLookups); }
    	}
     
    	private StandardReportLookupListsCacheObject GetStandardReportAndLookups()
    	{
    	            
    		UcbServiceClient sc = new UcbServiceClient();
    		StandardReportVMDC returnObject = sc.GetStandardReport(HttpContext.Current.User.Identity.Name, HttpContext.Current.User.Identity.Name, "FrameworkAdmin", "", null);
    
    	    StandardReportLookupListsCacheObject CachedLists = new StandardReportLookupListsCacheObject();
    		
    		CachedLists.ReportCategoryList = Mapper.Map<IEnumerable<ReportCategoryDC>, List<ReportCategoryModel>>(returnObject.ReportCategoryList);
        	return CachedLists;           
    	}
    
    	private const string SystemMarkedListsKey = "SYSTEMMARKEDLISTS";
    
    	public SystemMarkedLookupListsCacheObject SystemMarkedListCache
    	{
    	    get { return Get<SystemMarkedLookupListsCacheObject>(SystemMarkedListsKey, GetSystemMarkedAndLookups); }
    	}
     
    	private SystemMarkedLookupListsCacheObject GetSystemMarkedAndLookups()
    	{
    	            
    		UcbServiceClient sc = new UcbServiceClient();
    		SystemMarkedVMDC returnObject = sc.GetSystemMarked(HttpContext.Current.User.Identity.Name, HttpContext.Current.User.Identity.Name, "FrameworkAdmin", "", null);
    
    	    SystemMarkedLookupListsCacheObject CachedLists = new SystemMarkedLookupListsCacheObject();
    		
        	return CachedLists;           
    	}
    
    	private const string SystemParameterListsKey = "SYSTEMPARAMETERLISTS";
    
    	public SystemParameterLookupListsCacheObject SystemParameterListCache
    	{
    	    get { return Get<SystemParameterLookupListsCacheObject>(SystemParameterListsKey, GetSystemParameterAndLookups); }
    	}
     
    	private SystemParameterLookupListsCacheObject GetSystemParameterAndLookups()
    	{
    	            
    		UcbServiceClient sc = new UcbServiceClient();
    		SystemParameterVMDC returnObject = sc.GetSystemParameter(HttpContext.Current.User.Identity.Name, HttpContext.Current.User.Identity.Name, "FrameworkAdmin", "", null);
    
    	    SystemParameterLookupListsCacheObject CachedLists = new SystemParameterLookupListsCacheObject();
    		
        	return CachedLists;           
    	}
    }
    
    // Manages cached lookup lists for AbuseType
    public class AbuseTypeLookupListsCacheObject
    {
     
    }
    	
    // Manages cached lookup lists for ADRoleLookup
    public class ADRoleLookupLookupListsCacheObject
    {
    	public List<RoleModel> RoleList { get; set; }
     
    }
    	
    // Manages cached lookup lists for Application
    public class ApplicationLookupListsCacheObject
    {
     
    }
    	
    // Manages cached lookup lists for ApplicationAttribute
    public class ApplicationAttributeLookupListsCacheObject
    {
    	public List<ApplicationModel> ApplicationList { get; set; }
     
    }
    	
    // Manages cached lookup lists for ApplicationOrganisationTypeGroup
    public class ApplicationOrganisationTypeGroupLookupListsCacheObject
    {
    	public List<ApplicationModel> ApplicationList { get; set; }
    	public List<OrganisationTypeGroupModel> OrganisationTypeGroupList { get; set; }
    	public List<OrganisationModel> RootOrganisationForApplicationList { get; set; }
     
    }
    	
    // Manages cached lookup lists for Attachment
    public class AttachmentLookupListsCacheObject
    {
    	public List<IncidentModel> IncidentList { get; set; }
     
    }
    	
    // Manages cached lookup lists for AttachmentData
    public class AttachmentDataLookupListsCacheObject
    {
    	public List<AttachmentModel> AttachmentList { get; set; }
     
    }
    	
    // Manages cached lookup lists for Content
    public class ContentLookupListsCacheObject
    {
     
    }
    	
    // Manages cached lookup lists for ContingencyArrangement
    public class ContingencyArrangementLookupListsCacheObject
    {
     
    }
    	
    // Manages cached lookup lists for ControlMeasure
    public class ControlMeasureLookupListsCacheObject
    {
     
    }
    	
    // Manages cached lookup lists for Customer
    public class CustomerLookupListsCacheObject
    {
    	public List<RelationshipToCustomerModel> RelationshipToCustomerList { get; set; }
     
    }
    	
    // Manages cached lookup lists for CustomerContingencyArrangement
    public class CustomerContingencyArrangementLookupListsCacheObject
    {
    	public List<CustomerModel> CustomerList { get; set; }
    	public List<ContingencyArrangementModel> ContingencyArrangementList { get; set; }
     
    }
    	
    // Manages cached lookup lists for CustomerControlMeasure
    public class CustomerControlMeasureLookupListsCacheObject
    {
    	public List<CustomerModel> CustomerList { get; set; }
    	public List<ControlMeasureModel> ControlMeasureList { get; set; }
     
    }
    	
    // Manages cached lookup lists for EventLeadingToIncident
    public class EventLeadingToIncidentLookupListsCacheObject
    {
     
    }
    	
    // Manages cached lookup lists for Grade
    public class GradeLookupListsCacheObject
    {
     
    }
    	
    // Manages cached lookup lists for IncidentCategory
    public class IncidentCategoryLookupListsCacheObject
    {
     
    }
    	
    // Manages cached lookup lists for IncidentDetail
    public class IncidentDetailLookupListsCacheObject
    {
     
    }
    	
    // Manages cached lookup lists for IncidentInterestedParty
    public class IncidentInterestedPartyLookupListsCacheObject
    {
    	public List<IncidentModel> IncidentList { get; set; }
    	public List<InterestedPartyModel> InterestedPartyList { get; set; }
     
    }
    	
    // Manages cached lookup lists for IncidentLink
    public class IncidentLinkLookupListsCacheObject
    {
    	public List<IncidentModel> IncidentList { get; set; }
    	public List<IncidentModel> LinkedIncidentList { get; set; }
     
    }
    	
    // Manages cached lookup lists for IncidentLocation
    public class IncidentLocationLookupListsCacheObject
    {
     
    }
    	
    // Manages cached lookup lists for IncidentSystemMarked
    public class IncidentSystemMarkedLookupListsCacheObject
    {
    	public List<IncidentModel> IncidentList { get; set; }
    	public List<SystemMarkedModel> SystemMarkedList { get; set; }
     
    }
    	
    // Manages cached lookup lists for IncidentType
    public class IncidentTypeLookupListsCacheObject
    {
    	public List<IncidentCategoryModel> IncidentCategoryList { get; set; }
     
    }
    	
    // Manages cached lookup lists for IncidentUpdateEvent
    public class IncidentUpdateEventLookupListsCacheObject
    {
    	public List<IncidentModel> IncidentList { get; set; }
     
    }
    	
    // Manages cached lookup lists for InterestedParty
    public class InterestedPartyLookupListsCacheObject
    {
     
    }
    	
    // Manages cached lookup lists for IntroductoryInformation
    public class IntroductoryInformationLookupListsCacheObject
    {
     
    }
    	
    // Manages cached lookup lists for JobRole
    public class JobRoleLookupListsCacheObject
    {
     
    }
    	
    // Manages cached lookup lists for LinkedCustomer
    public class LinkedCustomerLookupListsCacheObject
    {
    	public List<CustomerModel> Customer1List { get; set; }
    	public List<CustomerModel> Customer2List { get; set; }
     
    }
    	
    // Manages cached lookup lists for Narrative
    public class NarrativeLookupListsCacheObject
    {
     
    }
    	
    // Manages cached lookup lists for Organisation
    public class OrganisationLookupListsCacheObject
    {
    	public List<OrganisationTypeModel> OrganisationTypeList { get; set; }
     
    }
    	
    // Manages cached lookup lists for OrganisationHierarchy
    public class OrganisationHierarchyLookupListsCacheObject
    {
    	public List<OrganisationModel> AncestorOrganisationList { get; set; }
    	public List<OrganisationModel> OrganisationList { get; set; }
     
    }
    	
    // Manages cached lookup lists for OrganisationType
    public class OrganisationTypeLookupListsCacheObject
    {
    	public List<OrganisationTypeGroupModel> OrganisationTypeGroupList { get; set; }
    	public List<OrganisationTypeModel> ParentOrganisationTypeList { get; set; }
     
    }
    	
    // Manages cached lookup lists for OrganisationTypeGroup
    public class OrganisationTypeGroupLookupListsCacheObject
    {
     
    }
    	
    // Manages cached lookup lists for Referrer
    public class ReferrerLookupListsCacheObject
    {
     
    }
    	
    // Manages cached lookup lists for RelationshipToCustomer
    public class RelationshipToCustomerLookupListsCacheObject
    {
     
    }
    	
    // Manages cached lookup lists for ReportCategory
    public class ReportCategoryLookupListsCacheObject
    {
     
    }
    	
    // Manages cached lookup lists for Role
    public class RoleLookupListsCacheObject
    {
    	public List<ApplicationModel> ApplicationList { get; set; }
     
    }
    	
    // Manages cached lookup lists for SiteStaff
    public class SiteStaffLookupListsCacheObject
    {
    	public List<SiteModel> SiteList { get; set; }
    	public List<StaffModel> StaffList { get; set; }
     
    }
    	
    // Manages cached lookup lists for Staff
    public class StaffLookupListsCacheObject
    {
    	public List<GradeModel> GradeList { get; set; }
     
    }
    	
    // Manages cached lookup lists for StaffAttributes
    public class StaffAttributesLookupListsCacheObject
    {
    	public List<StaffModel> StaffList { get; set; }
    	public List<ApplicationModel> ApplicationList { get; set; }
    	public List<ApplicationAttributeModel> ApplicationAttributeList { get; set; }
     
    }
    	
    // Manages cached lookup lists for StaffOrganisation
    public class StaffOrganisationLookupListsCacheObject
    {
    	public List<StaffModel> StaffList { get; set; }
    	public List<OrganisationModel> OrganisationList { get; set; }
    	public List<ApplicationModel> ApplicationList { get; set; }
     
    }
    	
    // Manages cached lookup lists for StandardReport
    public class StandardReportLookupListsCacheObject
    {
    	public List<ReportCategoryModel> ReportCategoryList { get; set; }
     
    }
    	
    // Manages cached lookup lists for SystemMarked
    public class SystemMarkedLookupListsCacheObject
    {
     
    }
    	
    // Manages cached lookup lists for SystemParameter
    public class SystemParameterLookupListsCacheObject
    {
     
    }
    	
}
