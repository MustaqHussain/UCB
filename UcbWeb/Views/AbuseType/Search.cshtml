@model UcbWeb.ViewModels.AbuseTypeSearchVM

@{
    ViewBag.Title = Resources.ENTITYNAME_ABUSETYPE + " " + Resources.LABEL_LISTNAME;
}
<h2>
    @Resources.ENTITYNAME_ABUSETYPE @Resources.LABEL_LISTNAME</h2><br/>
<script type="text/javascript">
    $(document).ready(function () {
        function updateGrid(e) {
            e.preventDefault();
            var url = $(this).attr('href');
            var grid = $(this).parents('.ajaxGrid');
            var id = grid.attr('id');
            grid.load(url + ' #' + id, function (response, status, xhr) {
                jQueryUIStyling();
            })
        }
        $('.ajaxGrid table thead tr a').live('click', updateGrid);
        $('.ajaxGrid table tfoot tr a').live('click', updateGrid);


    });

</script>

@using (Html.BeginForm("Search", "AbuseType", FormMethod.Post, new { @id = "mainForm" }))
{
    @Html.ValidationSummary(false, @Resources.ERROR_SUMMARY_TITLE, new { id = "validation_errors" })

    <div class="webgrid-wrapper">
        <div class="webgrid-title">
            @Resources.LABEL_GRIDTITLE</div>
        <div id="grid" class='ajaxGrid'>
            @{
                var grid = new WebGrid(null, canPage: true, rowsPerPage: Model.PageSize, defaultSort: "Code", canSort: false);
                grid.Bind(Model.MatchList, rowCount: Model.TotalRows, autoSortAndPage: false);
           
                string gridHtml = grid.GetHtml(
                    tableStyle: "webgrid",
                    headerStyle: "webgrid-header",
                    footerStyle: "webgrid-footer",
                    mode: WebGridPagerModes.All, firstText: Resources.PAGING_FIRSTPAGE, previousText: Resources.PAGING_PREVIOUS, nextText: Resources.PAGING_NEXT, lastText: Resources.PAGING_LASTPAGE, numericLinksCount: 5,
                    alternatingRowStyle: "webgrid-alternating-rows",
                    columns: grid.Columns(
                    grid.Column("Code", header: "", format: @<text>@Html.Raw("<input id='SelectButton_")@item.Code@Html.Raw("' type='submit' name='Search::SearchPost_")@item.Code@Html.Raw("' value='")@Html.Raw(Resources.LABEL_SELECTBUTTON)@Html.Raw("' title='")@Resources.TOOLTIP_SELECTTOEDITBUTTON @Html.Raw("' />")</text>)
                    ,grid.Column("Description", header: @Resources.LABEL_ABUSETYPE_DESCRIPTION)
                    ,grid.Column("IsActive", header: @Resources.LABEL_ABUSETYPE_ISACTIVE)
                    )
                    
                ).ToString();
				var pager = grid.Pager().ToString();
    var newPager = System.Text.RegularExpressions.Regex.Replace(pager, "(\\d+) ", "<span class='ui-state-highlight'>$1</span>");
    newPager = System.Text.RegularExpressions.Regex.Replace(newPager, "<a[^>]*? href=\"([^\"]+)\"[^>]*?>(.*?)</a>", "<a href=\"$1\" title=\"Page $2\">$2</a>");
    newPager = newPager.Replace("Page &gt;", "Next page");
    newPager = newPager.Replace("Page &lt;", "Previous page");
    
    gridHtml = System.Text.RegularExpressions.Regex.Replace(gridHtml, "(<tfoot>\\s*<tr[^>]*>\\s*<td[^>]*>)([^<]*|<[^/]*|</[^t]*)*(</tfoot>)", "$1" + newPager + "</td></tr>$3");
    gridHtml = System.Text.RegularExpressions.Regex.Replace(gridHtml, "<caption>(.*?)</caption>", "<caption><span class='accessible'>$1</span></caption>"); //add a span (with accessible css class) to the caption so that it can be hidden in IE6 and IE7. Without the span, caption only hidden in > IE8.
    
    System.Text.RegularExpressions.Regex r = new System.Text.RegularExpressions.Regex(@"<td(.*?)RowHeaderColumn(.*?)>(.*?)</td>");
    gridHtml = r.Replace(gridHtml, "<th scope=\"row\" $1$2>$3</th>"); 
     
                                @(new HtmlString(gridHtml))
                        }
                        Records Returned: @grid.TotalRowCount
        </div>
		<input id='NewButton' type='submit' name='Search::NewAbuseType' value="@Resources.LABEL_NEWBUTTON" title='@Resources.LABEL_NEWBUTTON @Resources.ENTITYNAME_ABUSETYPE' />
    </div>
}
